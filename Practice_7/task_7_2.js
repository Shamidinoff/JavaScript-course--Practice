// 2) Постепенно переходим к более реалистичным задачам :) Вы обнаружите, что там используется все тоже самое.
// Напишите функцию, которая будет определять номер купе по переданному ей номеру места. Наглядно:
// Функция принимает только целое число от 1 до 36.
// Если переданный аргумент не число, отрицательное или дробное - возвращается сообщение:
// "Ошибка. Проверьте правильность введенного номера места"
// Если число 0 или больше 36, то сообщение: "Таких мест в вагоне не существует"

// Пример:
// getCoupeNumber(33)  => 9
// getCoupeNumber(7)  => 2
// getCoupeNumber(300)  => "Таких мест в вагоне не существует"
// getCoupeNumber(0)  => "Таких мест в вагоне не существует"
// getCoupeNumber(7.7)  => "Ошибка. Проверьте правильность введенного номера места"
// getCoupeNumber(-10)  => "Ошибка. Проверьте правильность введенного номера места"
// getCoupeNumber('Hello')  => "Ошибка. Проверьте правильность введенного номера места"
// Такая функция вполне реальна и может использоваться для формирования билетов, в том числе и визуально на сайтах. Конечно, там будет куда больше условий, но смысл остается таким же.

// Всего в вагоне 9 купе, в каждом из них по 4 места. То есть --- купе1 (1-4), купе2 (5-8), купе3 (9-12), купе4 (13-16), купе5 (17-20), купе6 (21-24), купе7 (25-28), купе8 (29-32), купе9 (33-36).

function getCoupeNumber(place) {
  if (typeof place !== "number" || !Number.isInteger(place) || place < 0) {
    console.log("Ошибка. Проверьте правильность введенного номера места");
  } else if (place === 0 || place > 36) {
    console.log("Таких мест в вагоне не существует");
  } else {
    console.log(Math.ceil(place / 4));
  }
}

getCoupeNumber(21);
